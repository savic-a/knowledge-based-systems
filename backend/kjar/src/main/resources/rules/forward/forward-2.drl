import com.ftn.sbnz.model.BudgetExceeding;
import com.ftn.sbnz.model.Budget;
import com.ftn.sbnz.model.Transaction;
import com.ftn.sbnz.model.Warning;

import com.ftn.sbnz.event.TransactionEvent;

import com.ftn.sbnz.enumeration.Category;
import com.ftn.sbnz.enumeration.PurchaseType;


// 1. LEVEL
// TODO: add check time (set time in backward)
rule "Week with the biggest cost" 
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 0, $startTime: startTime, $endTime: endTime)
    $budget: Budget($clientId == clientId)
    $monetaryAmount: Number(doubleValue > $budgetExceeding.getValue() * 0.2) from accumulate(
        $transaction : Transaction(clientId == $clientId, 
                                        type == Transaction.Type.OUTCOME,
                                        date > $startTime,
                                        date < $endTime),
        sum($transaction.getValue())
    )
    eval($monetaryAmount.doubleValue() > $budgetExceeding.getValue())
then
    System.out.println("Trosak je veci od 20%");
    System.out.println($monetaryAmount);
    modify($budgetExceeding) {
        setValue($monetaryAmount.doubleValue()),
        setCriterion(1)
    }
end

// 2. LEVEL
rule "Category with the biggest cost"
salience 20
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 1, $startTime: startTime, $endTime: endTime)
    $category: Category() from Category.values()
    $sum : Double() from accumulate (
        $t : Transaction(type == Transaction.Type.OUTCOME,
                         category == $category, 
                         $clientId == clientId, 
                         date > $startTime,
                         date < $endTime),
        sum($t.getValue())
    )
    $count: Long() from accumulate(
        $t: Transaction(type == Transaction.Type.OUTCOME, 
                        category == $category, 
                        $clientId == clientId,
                        date > $startTime,
                        date < $endTime),
        count($t)
    )
    eval($sum.doubleValue() > $budgetExceeding.getCategoryCost())
then
    System.out.println("Printing...");
    System.out.println($sum.doubleValue());
    System.out.println($budgetExceeding.getCategoryCost());
    if ($budgetExceeding.getCategoryCost() < $sum.doubleValue())
    {
        modify($budgetExceeding) {
            setCategoryCost($sum.doubleValue()),
            setCount($count.intValue()),
            setCategory($category)
        }
        // $budgetExceeding.setCategoryCost($sum.doubleValue());
        // $budgetExceeding.setCount($count.intValue());
        // $budgetExceeding.setCategory($category);
        // update($budgetExceeding);
    }
    System.out.println("...LEVEL 2...");
    System.out.println($budgetExceeding.getCategory());
    System.out.println($budgetExceeding.getCategoryCost());
    System.out.println($budgetExceeding.getCount());
    // modify($budgetExceeding) {
    //     setCriterion(2)
    // }
end

// 3. LEVEL
rule "Frequent shopping"
salience 1
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 1, count >= 5)
then
    System.out.println("Frequent shopping");
    System.out.println($budgetExceeding.getCategoryCost());
    modify($budgetExceeding) {
        setCriterion(3),
        setPurchaseType(PurchaseType.FREQUENT)
    }
end

rule "Impulsive shopping"
salience 1
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 1, count < 5)
then
    System.out.println("Impulsive shopping");
    System.out.println($budgetExceeding.getCategoryCost());
    modify($budgetExceeding) {
        setCriterion(3),
        setPurchaseType(PurchaseType.IMPULSIVE)
    }
end

// 4. LEVEL
rule "Generate report"
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 3)
then
    System.out.println("Inserting new report");
    insert(new Warning($clientId, "High", "You have spent more than 20% of your monthly income on " + $budgetExceeding.getCategory() 
                        + ". Type of shopping: " + $budgetExceeding.getPurchaseType()));
    System.out.println("You have spent more than 20% of your monthly income on " + $budgetExceeding.getCategory() 
                        + ". Type of shopping: " + $budgetExceeding.getPurchaseType());
end