import com.ftn.sbnz.model.BudgetExceeding;
import com.ftn.sbnz.model.Budget;
import com.ftn.sbnz.model.Transaction;
import com.ftn.sbnz.enumeration.Category;


global Double highestCategoryCost;
global Category highestCategory;
global Integer highestCategoryCount;
global Integer numOfCategories;

// 1. LEVEL
// TODO: add check time (set time in backward)
rule "Week with the biggest cost" 
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 0)
    $budget: Budget($clientId == clientId)
    $monetaryAmount: Number(doubleValue > $budgetExceeding.getValue() * 0.2) from accumulate(
        $transaction : Transaction(clientId == $clientId, type == Transaction.Type.OUTCOME),
        sum($transaction.getValue())
    )
    eval($monetaryAmount.doubleValue() > $budgetExceeding.getValue())
then
    System.out.println("Trosak je veci od 20%");
    System.out.println($monetaryAmount);
    modify($budgetExceeding) {
        setValue($monetaryAmount.doubleValue()),
        setCriterion(1)
    }
end

// 2. LEVEL
rule "Category with the biggest cost"
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 1)
    $category: Category() from Category.values()
    $sum : Double() from accumulate (
        $t : Transaction(type == Transaction.Type.OUTCOME, category == $category, $clientId == clientId),
        sum($t.getValue())
    )
    $count: Long() from accumulate(
        $t: Transaction(type == Transaction.Type.OUTCOME, category == $category, $clientId == clientId),
        count($t)
    )
    eval($sum > $budgetExceeding.getCategoryCost())
then
    if ($budgetExceeding.getCategoryCost() < $sum)
    {
        modify($budgetExceeding) {
            setCategoryCost($sum.doubleValue()),
            setCount($count.intValue()),
            setCategory($category)
        }
        $budgetExceeding.setCategoryCost($sum.doubleValue());
        $budgetExceeding.setCount($count.intValue());
        $budgetExceeding.setCategory($category);
        update($budgetExceeding);
    }
    System.out.println("...LEVEL 2...");
    System.out.println($budgetExceeding.getCategory());
    System.out.println($budgetExceeding.getCategoryCost());
    System.out.println($budgetExceeding.getCount());
    modify($budgetExceeding) {
        setCriterion(2)
    }
end

rule "Impulsive or frequent shopping"
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 2)
then
    System.out.println("impulsiveee or frequenttt");
    System.out.println($budgetExceeding.getCategoryCost());
end
