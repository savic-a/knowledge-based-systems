import com.ftn.sbnz.model.BudgetExceeding;
import com.ftn.sbnz.model.Budget;
import com.ftn.sbnz.model.Transaction;


global Double highestCategoryCost;
global Category highestCategory;
global Integer highestCategoryCount;
global Integer numOfCategories;

// 1. LEVEL
// TODO: add check time (set time in backward)
rule "Week with the biggest cost" 
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 0)
    $budget: Budget($clientId == clientId)
    $monetaryAmount: Number(doubleValue > $budgetExceeding.getValue() * 0.2) from accumulate(
        $transaction : Transaction(clientId == $clientId, type == Transaction.Type.OUTCOME),
        sum($transaction.getValue())
    )
    eval($monetaryAmount.doubleValue() > $budgetExceeding.getValue())
then
    System.out.println("Trosak je veci od 20%");
    System.out.println($monetaryAmount);
    modify($budgetExceeding) {
        setValue($monetaryAmount.doubleValue()),
        setCriterion(1)
    }
end

// 2. LEVEL
// rule "Category with the biggest cost"
// when
//     $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 1)
//     $category: Category() from Category.values()
//     $sum : Double() from accumulate (
//         $t : Transaction(type == Transaction.Type.OUTCOME, category == $category),
//         sum($t.getValue())
//     )
//     $count: Long() from accumulate(
//         $t: Transaction(type == Transaction.Type.OUTCOME, category == $category),
//         count($t)
//     )
//     eval($sum.doubleValue() > $budgetExceeding.getCategoryCost())
// then
//     System.out.println("Criterion is 1...");
//     System.out.println($category);
//     System.out.println($sum);
//     System.out.println($count);
//     $budgetExceeding.setCategoryCost($sum.doubleValue());
//     $budgetExceeding.setCount($count.intValue());
//     // modify($budgetExceeding) {
//     //     setCategoryCost($sum.doubleValue()),
//     //     setCount($count.intValue())
//     // }
//     update($budgetExceeding);
//     System.out.println("...");
//     System.out.println($budgetExceeding.getCategoryCost());
// end

rule "Track highest category cost"
when
    $budgetExceeding: BudgetExceeding($clientId: clientId, criterion == 1)
    $category: Category() from Category.values()
    $sum : Double() from accumulate (
        $t : Transaction(type == Transaction.Type.OUTCOME, $clientId == clientId, category == $category),
        sum($t.getValue())
    )
    $count: Long() from accumulate(
        $t: Transaction(type == Transaction.Type.OUTCOME, category == $category),
        count($t)
    )
    eval($sum.doubleValue() > highestCategoryCost)
then
    highestCategoryCost = $sum.doubleValue();
    highestCategory = $category;
    highestCategoryCount = $count.intValue();
    numOfCategories++;
    System.out.println("Number of categories");
    System.out.println(numOfCategories);
end

rule "Update budget exceeding with highest category cost"
when
    // TODO : template
    eval(numOfCategories == 6)
    // TODO : get logged user
    $budgetExceeding: BudgetExceeding(clientId == 1, criterion == 1)  
then
    System.out.println("Criterion is 1...");
    System.out.println(highestCategory);
    System.out.println(highestCategoryCost);
    System.out.println(highestCategoryCount);

    $budgetExceeding.setCategoryCost(highestCategoryCost);
    $budgetExceeding.setCount(highestCategoryCount);
    update($budgetExceeding);
    System.out.println($budgetExceeding.getCategoryCost());

    highestCategoryCost = 0.0;
    highestCategory = null;
    highestCategoryCount = 0;
end

